'use client'

import { useState, useEffect } from 'react'
import { ethers } from 'ethers'
import Link from 'next/link'


export function BlockPage() {
  const [fearGreedIndex, setFearGreedIndex] = useState<number | null>(null)
  const [marketAnalysis, setMarketAnalysis] = useState<string>('Waiting for data...')

  useEffect(() => {
    const fetchFearGreedIndex = async () => {

      const contractAddress = "0xc04b335A75C5Fa14246152178f6834E3eBc2DC7C"


      try {
        const provider = new ethers.JsonRpcProvider("http://localhost:8545")

        const historicDataFeedStore = new ethers.Contract(
          contractAddress,
          [],
          provider,
        );
        const data = '0x' + ((31 | 0x80000000) >>> 0).toString(16).padStart(8, '0');
         
        const res = await provider.send('eth_call', [
          {
            to: historicDataFeedStore.target,
            data,
          },
          'latest',
        ]);
         
        console.log(res);
        const value = BigInt(parseInt(res.slice(0, 50)));
        const timestamp = Number('0x' + res.slice(50, 66));

       
        setFearGreedIndex(Number(ethers.formatEther(value)))
        await getMarketAnalysis(Number(ethers.formatEther(value)))
      } catch (error) {
        console.error("Error fetching Fear & Greed Index:", error)
      }
    }

    const getMarketAnalysis = async (index: number) => {
      

      try {
 
        // generated by OpenAI as of 12:30 PM UTC+7, Sat Nov 16, 2024
        // mockup data used due to unavailability of current working pinAI agents
        setMarketAnalysis("The current Fear & Greed Index, at 86, indicates extreme greed in the market, suggesting that investor sentiment is highly optimistic and potentially overconfident. Historically, such elevated levels often precede market corrections, as prices may have risen too quickly relative to fundamental valuations. This sentiment reflects a possible overbought condition, driven by momentum rather than intrinsic value, increasing the risk of a pullback if unexpected negative news arises or if valuations become unsustainable. Given these conditions, a cautious approach is recommended. Investors holding substantial positions may consider trimming gains and rebalancing portfolios, while new entrants might avoid significant purchases until market sentiment stabilizes. Recommendation: Sell or hold off on new investments.");
      } catch (error) {
        console.error("Error getting market analysis:", error)
        setMarketAnalysis('Failed to get market analysis.')
      }
    }

    fetchFearGreedIndex()
    // Set up an interval to fetch the index every 60 seconds
    const interval = setInterval(fetchFearGreedIndex, 120000)

    // Clean up the interval on component unmount
    return () => clearInterval(interval)
  }, [])

  return (
    <div className="min-h-screen bg-gray-900 text-white flex flex-col">
      <header className="text-center py-6">
        <h1 className="text-3xl font-bold">Reading Fear & Greed Index for Trading Agent</h1>
      </header>
      <main className="flex-grow container mx-auto p-4">
        <div className="flex flex-col items-center space-y-8">
          <div className="bg-gray-800 p-6 rounded-lg w-full max-w-md">
            <h2 className="text-xl font-bold mb-4">Fear & Greed Index</h2>
            <p className="text-4xl font-bold text-center">
              {fearGreedIndex !== null ? fearGreedIndex : 'Loading...'}
            </p>
          </div>
          <div className="bg-gray-800 p-6 rounded-lg w-full max-w-2xl">
            <h2 className="text-xl font-bold mb-4">Market Analysis</h2>
            <p className="text-sm">{marketAnalysis}</p>
          </div>
        </div>
        <div className="mt-8 text-center">
          <Link href="/agents" className="text-blue-400 hover:text-blue-300 mr-4">
            Go to AI Agents Page
          </Link>
          <Link href="/blocksense" className="text-blue-400 hover:text-blue-300">
            Go to Blocksense Data Page
          </Link>
        </div>
      </main>
      <footer className="text-center py-4 text-sm text-gray-400">
        Created by Keshav Ramamurthy, Eren Onder and Dev Udata for the Oxford Blockchain Society hackathon
      </footer>
    </div>
  )
}